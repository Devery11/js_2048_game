{"mappings":"C,A,WIAA,SAAS,EAAkB,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,CGVO,SAAS,EAAqB,CAAG,CAAE,CAAG,EACrC,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CNFA,IAAM,EAAO,GCIb,CAAA,eEG2C,EAAY,EFHjD,SAAA,IAiBF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAtBC,ACRC,SAA2B,CAAQ,CAAE,CAAW,EACnD,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDMM,IAAA,CAAA,GAwBF,IAAI,CAAC,eAAe,CAAG,WAAM,OAAA,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,G,EAEvD,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,eAAe,GACjC,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,C,CA5BX,OEGqC,EFHrC,C,CA+BJ,IAAA,eAAA,MAAA,SAAa,CAAG,EAGd,IAAK,IGrC4B,EH+CjC,EAZI,EAAc,EAAI,MAAM,CAAC,SAAA,CAA7B,EAAqC,OAAA,AAAS,IAAT,C,GAE5B,EAAI,EAAG,EAAI,EAAY,MAAM,CAAG,EAAG,IACtC,CAAW,CAAC,EAAE,GAAK,CAAW,CAAC,EAAI,EAAE,GACvC,CAAW,CAAC,EAAE,EAAI,EAClB,IAAI,CAAC,KAAK,EAAI,CAAW,CAAC,EAAE,CAC5B,CAAW,CAAC,EAAI,EAAE,CAAG,GAQzB,MAFA,AAAA,CAAA,EAFA,EAAc,EAAY,MAAM,CAAC,SAAA,CAAjC,EAAuC,OAAA,C,EAEvC,EAAY,IAAI,CAAhB,KAAA,CAAA,EG9CO,ACJJ,SAA8B,CAAG,EACpC,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDCqC,EH+CZ,AAAI,MAAM,EAAI,EAAY,MAAM,EAAE,IAAI,CAAC,KG9CxB,AGNjC,SAA4B,CAAI,EACnC,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJ5D,SAAwC,CAAC,CAAE,CAAM,EACpD,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAAG,GAE1D,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EAAG,GAChH,ELLkG,IAAQ,AINnG,WACH,MAAM,AAAI,UAAU,uIACxB,KPoDW,CACT,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAEnD,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,EAEtE,C,E,CAEA,IAAA,SAAA,MAAA,WACE,IAAK,I,E,I,C,E,S,C,EACH,IAAM,EAAS,EAAK,KAAK,CAAC,GAAG,CAAC,SAAA,CAA9B,EAAqC,OAAA,CAAG,CAAC,EAAS,A,GAGlD,AAFkB,EAAK,YAAY,CAAC,GAE1B,OAAO,CAAC,SAAC,CAAA,CAAO,CAA1B,EACE,EAAK,KAAK,CAAC,EAAY,CAAC,EAAS,CAAG,CACtC,EACF,E,E,I,CAPS,EAAW,EAAG,EAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAArD,EAAA,EAQF,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAK,I,E,I,C,E,S,C,EACH,IAAM,EAAS,EAAK,KAAK,CAAC,GAAG,CAAC,SAAA,CAA9B,EAAqC,OAAA,CAAG,CAAC,EAAS,AAAE,GAAA,OAAO,GAG3D,AAFkB,EAAK,YAAY,CAAC,GAAQ,OAAO,GAEzC,OAAO,CAAC,SAAC,CAAA,CAAO,CAA1B,EACE,EAAK,KAAK,CAAC,EAAY,CAAC,EAAS,CAAG,CACtC,EACF,E,E,I,CAPS,EAAW,EAAG,EAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAArD,EAAA,EAQF,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAKA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAYA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAKA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,SAAS,CAAC,GACf,IAAI,CAAC,SAAS,CAAC,GACf,IAAI,CAAC,MAAM,CAAG,SAChB,C,E,CAKA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,eAAe,GACjC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,EACZ,C,E,CAGA,IAAA,YAAA,MAAA,WAAU,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAiB,GACnB,EAAmB,IAAI,CAAC,kBAAkB,GAEhD,GAAI,AAA4B,IAA5B,EAAiB,MAAM,EAI3B,IAAM,EACF,CAAgB,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAiB,MAAM,EAAE,AAErE,CAAA,KAAK,MAAM,GAAK,EAClB,IAAI,CAAC,KAAK,CAAC,CAAW,CAAC,EAAE,CAAC,CAAC,CAAW,CAAC,EAAE,CAAC,CAAG,EAE7C,IAAI,CAAC,KAAK,CAAC,CAAW,CAAC,EAAE,CAAC,CAAC,CAAW,CAAC,EAAE,CAAC,CAAG,EAEjD,C,E,CAEA,IAAA,qBAAA,MAAA,WAGE,IAAK,IAFC,EAAS,EAAE,CAER,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAO,IAAI,CAAC,CAAC,EAAG,EAAE,EAKxB,OAAO,CACT,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACD,KAAhC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,OACxB,CAAA,IAAI,CAAC,MAAM,CAAG,KAFlB,CAKF,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAAK,CACjD,IAAM,EAAe,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CACxD,EAAc,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAE7D,GAAyB,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAU,AAAyB,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EAEvC,GAAe,EADxB,MAIJ,CAEF,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CEnLkB,EAAkB,AFJhC,EEI4C,SAAS,CAAE,GACrD,GAAa,EFLf,EEK8C,GFL9C,C,G,EDFA,EAAc,SAAS,aAAa,CAAC,WAErC,EAAY,AADA,SAAS,aAAa,CAAC,eACb,oBAAoB,CAAC,MAC3C,EAAO,SAAS,IAAI,CA8D1B,SAAS,IAGP,IAAK,IAHkB,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAY,AAqBrC,WAGE,IAAK,IAFC,EAAiB,EAAE,CAEhB,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IAAK,CAIzC,IAAK,IAHC,EAAQ,CAAS,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAC1C,EAAW,EAAE,CAEV,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAChC,EAAS,IAAI,CAAC,CAAK,CAAC,EAAE,EAGxB,EAAe,IAAI,CAAC,EACtB,CAEA,OAAO,CACT,IAnCQ,EAAY,EAAK,QAAQ,GAEtB,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IACpC,IAAK,IAAI,EAAI,EAAG,EAAI,CAAS,CAAC,EAAE,CAAC,MAAM,CAAE,IACvC,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAG,CAAC,aAAa,CAEtC,AAAoB,IAApB,CAAS,CAAC,EAAE,CAAC,EAAE,EACjB,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAG,CAAS,CAAC,EAAE,CAAC,EAAE,CAC7C,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAE,eAA8B,MAAA,CAAhB,CAAS,CAAC,EAAE,CAAC,EAAE,IAE5D,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAG,EAOpC,CAFc,SAAS,aAAa,CAAC,eAE/B,WAAW,CAAG,GAAK,EAAK,QAAQ,EACxC,CA/EA,EAAY,gBAAgB,CAAC,QAAS,WAChC,AAAqB,SAArB,EAAK,SAAS,IAChB,EAAY,SAAS,CAAC,GAAG,CAAC,WAC1B,EAAY,WAAW,CAAG,UAC1B,EAAK,KAAK,GACV,SAAS,aAAa,CAAC,kBAAkB,SAAS,CAAC,GAAG,CAAC,YAC9C,AAAqB,SAArB,EAAK,SAAS,GACvB,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,GAAG,CAAC,UAExB,QAArB,EAAK,SAAS,IACvB,SAAS,aAAa,CAAC,gBAAgB,SAAS,CAAC,GAAG,CAAC,UAGrD,EAAK,OAAO,IAGd,GACF,GAEA,EAAK,gBAAgB,CAAC,UAAW,SAAA,CAAjC,EACE,GAAI,AAAqB,YAArB,EAAK,SAAS,IAIlB,IAAM,EAAe,KAAK,SAAS,CAAC,EAAK,QAAQ,IAEjD,OAAQ,EAAc,OAAO,EAC3B,KAAK,GACH,EAAK,QAAQ,GACb,KACF,MAAK,GACH,EAAK,MAAM,GACX,KACF,MAAK,GACH,EAAK,SAAS,GACd,KACF,MAAK,GACH,EAAK,QAAQ,EAEjB,CAEI,IAAiB,KAAK,SAAS,CAAC,EAAK,QAAQ,MAIjD,EAAK,SAAS,GAEd,EAAK,QAAQ,GAEb,EAAK,SAAS,GAEd,IAEI,AAAqB,QAArB,EAAK,SAAS,GAChB,SAAS,aAAa,CAAC,gBAAgB,SAAS,CAAC,MAAM,CAAC,UAC1B,SAArB,EAAK,SAAS,IACvB,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,MAAM,CAAC,WAE7D,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.getInitialTable = function() {\n            return JSON.parse(JSON.stringify(initialState));\n        };\n        // eslint-disable-next-line no-console\n        this.state = this.getInitialTable();\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"calculateRow\",\n            value: function calculateRow(arr) {\n                var _filteredArr;\n                var filteredArr = arr.filter(function(item) {\n                    return item !== 0;\n                });\n                for(var i = 0; i < filteredArr.length - 1; i++)if (filteredArr[i] === filteredArr[i + 1]) {\n                    filteredArr[i] *= 2;\n                    this.score += filteredArr[i];\n                    filteredArr[i + 1] = 0;\n                }\n                filteredArr = filteredArr.filter(function(el) {\n                    return el;\n                });\n                (_filteredArr = filteredArr).push.apply(_filteredArr, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(new Array(4 - filteredArr.length).fill(0)));\n                return filteredArr;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                for(var i = 0; i < this.state.length; i++)this.state[i] = this.calculateRow(this.state[i]);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                for(var i = 0; i < this.state.length; i++)this.state[i] = this.calculateRow(this.state[i].reverse()).reverse();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(indexRow) {\n                    var column = _this.state.map(function(row) {\n                        return row[indexRow];\n                    });\n                    var newColumn = _this.calculateRow(column);\n                    newColumn.forEach(function(value, indexColumn) {\n                        _this1.state[indexColumn][indexRow] = value;\n                    });\n                };\n                var _this1 = this;\n                for(var indexRow = 0; indexRow < this.state.length; indexRow++)_loop(indexRow);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(indexRow) {\n                    var column = _this.state.map(function(row) {\n                        return row[indexRow];\n                    }).reverse();\n                    var newColumn = _this.calculateRow(column).reverse();\n                    newColumn.forEach(function(value, indexColumn) {\n                        _this1.state[indexColumn][indexRow] = value;\n                    });\n                };\n                var _this1 = this;\n                for(var indexRow = 0; indexRow < this.state.length; indexRow++)_loop(indexRow);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.spawnCell(0);\n                this.spawnCell(0);\n                this.status = \"playing\";\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = this.getInitialTable();\n                this.score = 0;\n                this.start();\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"spawnCell\",\n            value: function spawnCell() {\n                var percentForFour = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.1;\n                var arrOfVoidIndexes = this.getVoidCellIndexes();\n                if (arrOfVoidIndexes.length === 0) return;\n                var randomIndex = arrOfVoidIndexes[Math.floor(Math.random() * arrOfVoidIndexes.length)];\n                if (Math.random() < percentForFour) this.state[randomIndex[0]][randomIndex[1]] = 4;\n                else this.state[randomIndex[0]][randomIndex[1]] = 2;\n            }\n        },\n        {\n            key: \"getVoidCellIndexes\",\n            value: function getVoidCellIndexes() {\n                var result = [];\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 0) result.push([\n                        i,\n                        j\n                    ]);\n                }\n                return result;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var i = 0; i < this.state.length; i++)if (this.state[i].indexOf(2048) !== -1) this.status = \"win\";\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length - 1; j++){\n                    var isRightEqual = this.state[j + 1][i] === this.state[j][i];\n                    var isLeftEqual = this.state[i][j + 1] === this.state[i][j];\n                    if (this.state[i][j] === 0 || this.state[i][j + 1] === 0) return;\n                    else if (isLeftEqual || isRightEqual) return;\n                }\n                this.status = \"lose\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$fieldRows = $197cd56b15c33885$var$gameField.getElementsByTagName(\"tr\");\nvar $197cd56b15c33885$var$page = document.body;\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$buttonStart.classList.add(\"restart\");\n        $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n        $197cd56b15c33885$var$game.start();\n        document.querySelector(\".message-start\").classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        document.querySelector(\".message-lose\").classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.restart();\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        document.querySelector(\".message-win\").classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.restart();\n    } else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$synchronization();\n});\n$197cd56b15c33885$var$page.addEventListener(\"keydown\", function(eventListener) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var currentState = JSON.stringify($197cd56b15c33885$var$game.getState());\n    switch(eventListener.keyCode){\n        case 37:\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case 38:\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case 39:\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case 40:\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    if (currentState === JSON.stringify($197cd56b15c33885$var$game.getState())) return;\n    $197cd56b15c33885$var$game.spawnCell();\n    $197cd56b15c33885$var$game.checkWin();\n    $197cd56b15c33885$var$game.checkLose();\n    $197cd56b15c33885$var$synchronization();\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n});\nfunction $197cd56b15c33885$var$synchronization() {\n    var gameCells = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : $197cd56b15c33885$var$getGameArray();\n    var gameState = $197cd56b15c33885$var$game.getState();\n    for(var i = 0; i < gameState.length; i++)for(var j = 0; j < gameState[i].length; j++){\n        gameCells[i][j].classList = [\n            \"field-cell\"\n        ];\n        if (gameState[i][j] !== 0) {\n            gameCells[i][j].textContent = gameState[i][j];\n            gameCells[i][j].classList.add(\"field-cell--\".concat(gameState[i][j]));\n        } else gameCells[i][j].textContent = \"\";\n    }\n    var score = document.querySelector(\".game-score\");\n    score.textContent = \"\" + $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$getGameArray() {\n    var gameCellsArray = [];\n    for(var i = 0; i < $197cd56b15c33885$var$fieldRows.length; i++){\n        var cells = $197cd56b15c33885$var$fieldRows[i].getElementsByTagName(\"td\");\n        var rowArray = [];\n        for(var j = 0; j < cells.length; j++)rowArray.push(cells[j]);\n        gameCellsArray.push(rowArray);\n    }\n    return gameCellsArray;\n}\n\n})();\n//# sourceMappingURL=index.1ab8280c.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst buttonStart = document.querySelector('.button');\nconst gameField = document.querySelector('.game-field');\nconst fieldRows = gameField.getElementsByTagName('tr');\nconst page = document.body;\n\nbuttonStart.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    buttonStart.classList.add('restart');\n    buttonStart.textContent = 'Restart';\n    game.start();\n    document.querySelector('.message-start').classList.add('hidden');\n  } else if (game.getStatus() === 'lose') {\n    document.querySelector('.message-lose').classList.add('hidden');\n    game.restart();\n  } else if (game.getStatus() === 'win') {\n    document.querySelector('.message-win').classList.add('hidden');\n    game.restart();\n  } else {\n    game.restart();\n  }\n\n  synchronization();\n});\n\npage.addEventListener('keydown', eventListener => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  const currentState = JSON.stringify(game.getState());\n\n  switch (eventListener.keyCode) {\n    case 37:\n      game.moveLeft();\n      break;\n    case 38:\n      game.moveUp();\n      break;\n    case 39:\n      game.moveRight();\n      break;\n    case 40:\n      game.moveDown();\n      break;\n  }\n\n  if (currentState === JSON.stringify(game.getState())) {\n    return;\n  }\n\n  game.spawnCell();\n\n  game.checkWin();\n\n  game.checkLose();\n\n  synchronization();\n\n  if (game.getStatus() === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n});\n\nfunction synchronization(gameCells = getGameArray()) {\n  const gameState = game.getState();\n\n  for (let i = 0; i < gameState.length; i++) {\n    for (let j = 0; j < gameState[i].length; j++) {\n      gameCells[i][j].classList = ['field-cell'];\n\n      if (gameState[i][j] !== 0) {\n        gameCells[i][j].textContent = gameState[i][j];\n        gameCells[i][j].classList.add(`field-cell--${gameState[i][j]}`);\n      } else {\n        gameCells[i][j].textContent = '';\n      }\n    }\n  }\n\n  const score = document.querySelector('.game-score');\n\n  score.textContent = '' + game.getScore();\n}\n\nfunction getGameArray() {\n  const gameCellsArray = [];\n\n  for (let i = 0; i < fieldRows.length; i++) {\n    const cells = fieldRows[i].getElementsByTagName('td');\n    const rowArray = [];\n\n    for (let j = 0; j < cells.length; j++) {\n      rowArray.push(cells[j]);\n    }\n\n    gameCellsArray.push(rowArray);\n  }\n\n  return gameCellsArray;\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\n\nclass Game {\n  /** +\n   *\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.getInitialTable = () => JSON.parse(JSON.stringify(initialState));\n    // eslint-disable-next-line no-console\n    this.state = this.getInitialTable();\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  calculateRow(arr) {\n    let filteredArr = arr.filter(item => item !== 0);\n\n    for (let i = 0; i < filteredArr.length - 1; i++) {\n      if (filteredArr[i] === filteredArr[i + 1]) {\n        filteredArr[i] *= 2;\n        this.score += filteredArr[i];\n        filteredArr[i + 1] = 0;\n      }\n    }\n\n    filteredArr = filteredArr.filter(el => el);\n\n    filteredArr.push(...(new Array(4 - filteredArr.length).fill(0)));\n\n    return filteredArr;\n  }\n\n  moveLeft() {\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = this.calculateRow(this.state[i]);\n    }\n  }\n\n  moveRight() {\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = this.calculateRow(this.state[i].reverse()).reverse();\n    }\n  }\n\n  moveUp() {\n    for (let indexRow = 0; indexRow < this.state.length; indexRow++) {\n      const column = this.state.map(row => row[indexRow]);\n      const newColumn = this.calculateRow(column);\n\n      newColumn.forEach((value, indexColumn) => {\n        this.state[indexColumn][indexRow] = value;\n      });\n    }\n  }\n\n  moveDown() {\n    for (let indexRow = 0; indexRow < this.state.length; indexRow++) {\n      const column = this.state.map(row => row[indexRow]).reverse();\n      const newColumn = this.calculateRow(column).reverse();\n\n      newColumn.forEach((value, indexColumn) => {\n        this.state[indexColumn][indexRow] = value;\n      });\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.spawnCell(0);\n    this.spawnCell(0);\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = this.getInitialTable();\n    this.score = 0;\n    this.start();\n  }\n\n  // Add your own methods here\n  spawnCell(percentForFour = 0.1) {\n    const arrOfVoidIndexes = this.getVoidCellIndexes();\n\n    if (arrOfVoidIndexes.length === 0) {\n      return;\n    }\n\n    const randomIndex\n      = arrOfVoidIndexes[Math.floor(Math.random() * arrOfVoidIndexes.length)];\n\n    if (Math.random() < percentForFour) {\n      this.state[randomIndex[0]][randomIndex[1]] = 4;\n    } else {\n      this.state[randomIndex[0]][randomIndex[1]] = 2;\n    }\n  }\n\n  getVoidCellIndexes() {\n    const result = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 0) {\n          result.push([i, j]);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  checkWin() {\n    for (let i = 0; i < this.state.length; i++) {\n      if (this.state[i].indexOf(2048) !== -1) {\n        this.status = 'win';\n      }\n    }\n  }\n\n  checkLose() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length - 1; j++) {\n        const isRightEqual = this.state[j + 1][i] === this.state[j][i];\n        const isLeftEqual = this.state[i][j + 1] === this.state[i][j];\n\n        if (this.state[i][j] === 0 || this.state[i][j + 1] === 0) {\n          return;\n        } else if (isLeftEqual || isRightEqual) {\n          return;\n        }\n      }\n    }\n    this.status = 'lose';\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","TypeError","getInitialTable","JSON","parse","stringify","state","status","score","value","_filteredArr","filteredArr","filter","item","el","push","apply","isArray","fill","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","calculateRow","reverse","_this","_loop","indexRow","column","map","row","newColumn","forEach","indexColumn","_this1","spawnCell","start","percentForFour","arrOfVoidIndexes","getVoidCellIndexes","randomIndex","Math","floor","random","result","j","indexOf","isRightEqual","isLeftEqual","$197cd56b15c33885$var$buttonStart","document","querySelector","$197cd56b15c33885$var$fieldRows","$197cd56b15c33885$var$gameField","getElementsByTagName","$197cd56b15c33885$var$page","body","$197cd56b15c33885$var$synchronization","gameCells","$197cd56b15c33885$var$getGameArray","gameCellsArray","cells","rowArray","gameState","getState","classList","textContent","add","concat","getScore","addEventListener","getStatus","restart","eventListener","currentState","keyCode","moveLeft","moveUp","moveRight","moveDown","checkWin","checkLose","remove"],"version":3,"file":"index.1ab8280c.js.map"}